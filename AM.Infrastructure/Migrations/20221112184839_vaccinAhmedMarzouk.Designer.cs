// <auto-generated />
using System;
using AM.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AM.Infrastructure.Migrations
{
    [DbContext(typeof(AMContext))]
    [Migration("20221112184839_vaccinAhmedMarzouk")]
    partial class vaccinAhmedMarzouk
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AM.Application.Core.Domain.Citoyen", b =>
                {
                    b.Property<string>("cin")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("age")
                        .HasColumnType("int");

                    b.Property<int>("citoyenId")
                        .HasColumnType("int");

                    b.Property<string>("nom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("numeroEvax")
                        .HasColumnType("int");

                    b.Property<string>("prenom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("telephone")
                        .HasColumnType("int");

                    b.HasKey("cin");

                    b.ToTable("citoyen");
                });

            modelBuilder.Entity("AM.Application.Core.Domain.CnetreVaccination", b =>
                {
                    b.Property<int>("centreVaccinationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("centreVaccinationId"), 1L, 1);

                    b.Property<int>("capacite")
                        .HasColumnType("int");

                    b.Property<int>("nbChaises")
                        .HasColumnType("int");

                    b.Property<int>("numTelephone")
                        .HasColumnType("int");

                    b.Property<string>("responsableCnetre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("centreVaccinationId");

                    b.ToTable("centredevaccination");
                });

            modelBuilder.Entity("AM.Application.Core.Domain.RendezVous", b =>
                {
                    b.Property<int>("vaccinId")
                        .HasColumnType("int");

                    b.Property<int>("citoyenId")
                        .HasColumnType("int");

                    b.Property<DateTime>("dateVaccination")
                        .HasColumnType("datetime2");

                    b.Property<string>("CodeInfermerie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("citoyencin")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("nbeDoses")
                        .HasColumnType("int");

                    b.HasKey("vaccinId", "citoyenId", "dateVaccination");

                    b.HasIndex("citoyencin");

                    b.ToTable("rendezvous");
                });

            modelBuilder.Entity("AM.Application.Core.Domain.Vaccin", b =>
                {
                    b.Property<int>("vaccinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("vaccinId"), 1L, 1);

                    b.Property<DateTime>("dateValidite")
                        .HasColumnType("datetime2");

                    b.Property<string>("fournisseur")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("quantite")
                        .HasColumnType("int");

                    b.Property<int>("typevaccin")
                        .HasColumnType("int");

                    b.HasKey("vaccinId");

                    b.ToTable("vaccin");
                });

            modelBuilder.Entity("AM.Application.Core.Domain.Citoyen", b =>
                {
                    b.OwnsOne("AM.Application.Core.Domain.Adresse", "adresse", b1 =>
                        {
                            b1.Property<string>("Citoyencin")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<int>("codePostal")
                                .HasColumnType("int");

                            b1.Property<int>("rue")
                                .HasColumnType("int");

                            b1.Property<string>("ville")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("Citoyencin");

                            b1.ToTable("citoyen");

                            b1.WithOwner()
                                .HasForeignKey("Citoyencin");
                        });

                    b.Navigation("adresse");
                });

            modelBuilder.Entity("AM.Application.Core.Domain.RendezVous", b =>
                {
                    b.HasOne("AM.Application.Core.Domain.Citoyen", "citoyen")
                        .WithMany("rendezvous")
                        .HasForeignKey("citoyencin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AM.Application.Core.Domain.Vaccin", "vaccin")
                        .WithMany("rendezvous")
                        .HasForeignKey("vaccinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("citoyen");

                    b.Navigation("vaccin");
                });

            modelBuilder.Entity("AM.Application.Core.Domain.Citoyen", b =>
                {
                    b.Navigation("rendezvous");
                });

            modelBuilder.Entity("AM.Application.Core.Domain.Vaccin", b =>
                {
                    b.Navigation("rendezvous");
                });
#pragma warning restore 612, 618
        }
    }
}
